#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

#test "" = "$(grep '^Signed-off-by: ' "$1" |
#	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
#	echo >&2 Duplicate Signed-off-by lines.
#	exit 1
#}

# Retdec development
# Builds the prefix of commit message
cat "$1" | head -n1 | egrep "^[-a-z/]*: " >/dev/null 2>&1
if [ $? -eq 0 ]; then
	exit 0
fi

git_root=`git rev-parse --show-toplevel`
module=`git status --porcelain | egrep "^[MADRC]" |
sed -r "s%^[MADRC][ MD]{1,3} (.*)%\1%g" |
xargs realpath | sed -r "s%^$git_root/(.*)%\1%g" |
sed -r "s%^([^/]*/[^/]*/[^/]*)/.*%\1%g" |
sed -r "s%^([^/]*)/[^.]*\..*%\1%g" |
sed "s%^decdev/%%g" |
sed -r "s%^([^/]*/[^/]*)/[^/]*%\1%g" |
uniq -c |
sort -nr |
sed -r "s%[ ]*[0-9]* (.*)%\1%g" |
head -n1`
sed -r "1s%^(.*)$%$module: \1%g" -i "$1"
